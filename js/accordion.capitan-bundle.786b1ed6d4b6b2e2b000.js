webpackJsonp([9],{274:(function(module,exports,__webpack_require__){"use strict";var _interopRequireDefault=__webpack_require__(283);Object.defineProperty(exports,"__esModule",{value:true});exports.init=init;var _deepmerge=_interopRequireDefault(__webpack_require__(320));var _assertBreakpoint=_interopRequireDefault(__webpack_require__(285));var _={defaults:{componentSelector:'.accordion, [data-component-accordion], .footer',pluginOptions:{selectors:{trigger:'.accordion__trigger',content:'.accordion__content-wrapper',activeTrigger:'.accordion__trigger.is-open',activeContent:'.accordion__content-wrapper.is-open'},classes:{trigger:'accordion__trigger',content:'accordion__content-wrapper'},active:false,expandable:false,callbacks:{},errorMessages:{}}}};var o=_.defaults;function checkBreakpoint(accordion){if(((0,_assertBreakpoint.default)('eq',accordion.breakpoints[0])||(0,_assertBreakpoint.default)('ht',accordion.breakpoints[0]))&&(0,_assertBreakpoint.default)('lt',accordion.breakpoints[1])){prepareAccordion(accordion);observeEvents(accordion);}else{resetAccordion(accordion,accordion.options);}}
function resetAccordion(accordion){var triggers=accordion.querySelectorAll(accordion.options.selectors.trigger);for(var i=0;i<triggers.length;i+=1){var id=triggers[i].dataset.target;var content=document.getElementById(id);if(!content){content=triggers[i].nextElementSibling;}
triggers[i].removeEventListener('click',triggerListener);triggers[i].classList.remove(o.pluginOptions.classes.trigger);if(content){content.classList.remove(o.pluginOptions.classes.content);content.style.maxHeight='';}}}
function prepareAccordion(accordion){var triggers=accordion.querySelectorAll(accordion.options.selectors.trigger);for(var i=0;i<triggers.length;i+=1){var id=triggers[i].dataset.target;var content=document.getElementById(id);if(!content){content=triggers[i].nextElementSibling;}
if(accordion.inlineSettings&&content){triggers[i].classList.add(o.pluginOptions.classes.trigger);content.classList.add(o.pluginOptions.classes.content);}
triggers[i].accordionContent=content;}}
function triggerListener(event){if(event.currentTarget.accordionContent!==null){if(Array.from(event.target.offsetParent.offsetParent.children).map(function(el){return el.type;}).find(function(el){return el==="checkbox";})){console.log(event);Array.from(event.target.offsetParent.offsetParent.children).map(function(el){console.log(el.checked);if(el.type==="checkbox"&&(!el.checked||(el.checked=false))){el.checked=true;}else{el.checked=false;}});var _accordion=event.currentTarget.closest(o.componentSelector);triggerContent(event.currentTarget,_accordion);}else event.preventDefault();var accordion=event.currentTarget.closest(o.componentSelector);triggerContent(event.currentTarget,accordion);}}
function observeEvents(accordion){var triggers=accordion.querySelectorAll(accordion.options.selectors.trigger);for(var i=0;i<triggers.length;i+=1){triggers[i].addEventListener('click',triggerListener);}}
function handleResize(){var components=document.querySelectorAll(o.componentSelector);var activeItems=document.querySelectorAll(o.pluginOptions.selectors.activeContent);for(var i=0;i<components.length;i+=1){if(components[i].breakpoints.length){checkBreakpoint(components[i]);}}
for(var _i=0;_i<activeItems.length;_i+=1){activeItems[_i].style.maxHeight="".concat(activeItems[_i].scrollHeight,"px");}}
function triggerContent(trigger,accordion){var triggers=accordion.querySelectorAll(accordion.options.selectors.trigger);var contents=accordion.querySelectorAll(accordion.options.selectors.content);var content=trigger.accordionContent;if(accordion.options.active===true){triggers[accordion.options.active].classList.add('is-open');contents[accordion.options.active].style.maxHeight='none';}
if(content){if(!trigger.classList.contains('is-open')){if(accordion.options.expandable===false){for(var i=0;i<triggers.length;i+=1){triggers[i].classList.remove('is-open');}
for(var _i2=0;_i2<contents.length;_i2+=1){contents[_i2].classList.remove('is-open');contents[_i2].style.maxHeight='0';}}
trigger.classList.add('is-open');content.classList.add('is-open');content.style.maxHeight="".concat(content.scrollHeight,"px");}else{trigger.classList.remove('is-open');content.classList.remove('is-open');content.style.maxHeight='0';}}}
function init(){var components=document.querySelectorAll(o.componentSelector);for(var i=0;i<components.length;i+=1){var inlineSettings=components[i].dataset.componentAccordion?JSON.parse(components[i].dataset.componentAccordion):null;if(components[i].classList.contains('footer')){inlineSettings=(0,_deepmerge.default)(o.pluginOptions,{breakpoints:["xs","md"],options:{selectors:{trigger:".accordion__trigger--mobile"}}});}
var breakpoints=inlineSettings!==null?inlineSettings.breakpoints:[];var options=inlineSettings&&inlineSettings.options?(0,_deepmerge.default)(o.pluginOptions,inlineSettings.options):o.pluginOptions;components[i].breakpoints=breakpoints;components[i].inlineSettings=inlineSettings;components[i].options=options;if(breakpoints.length){checkBreakpoint(components[i]);}else{prepareAccordion(components[i]);observeEvents(components[i]);}
Capitan.Vars.$window.smartresize(handleResize);}}}),283:(function(module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
module.exports=_interopRequireDefault;}),285:(function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=assertBreakpoint;function assertBreakpoint(operator,breakpoint){'use strict';var breakpoints=Object.keys(Capitan.Vars.breakpoints),curBreakpointIndex=breakpoints.indexOf(Capitan.Vars.currentBreakpoint),conditionalBreakpointIndex=breakpoints.indexOf(breakpoint);switch(operator){case 'eq':return curBreakpointIndex===conditionalBreakpointIndex;case 'lt':return curBreakpointIndex<conditionalBreakpointIndex;case 'ht':return curBreakpointIndex>conditionalBreakpointIndex;default:return false;}};}),320:(function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});var isMergeableObject=function isMergeableObject(value){return isNonNullObject(value)&&!isSpecial(value)};function isNonNullObject(value){return!!value&&typeof value==='object'}
function isSpecial(value){var stringValue=Object.prototype.toString.call(value);return stringValue==='[object RegExp]'||stringValue==='[object Date]'||isReactElement(value)}
var canUseSymbol=typeof Symbol==='function'&&Symbol.for;var REACT_ELEMENT_TYPE=canUseSymbol?Symbol.for('react.element'):0xeac7;function isReactElement(value){return value.$$typeof===REACT_ELEMENT_TYPE}
function emptyTarget(val){return Array.isArray(val)?[]:{}}
function cloneUnlessOtherwiseSpecified(value,options){return(options.clone!==false&&options.isMergeableObject(value))?deepmerge(emptyTarget(value),value,options):value}
function defaultArrayMerge(target,source,options){return target.concat(source).map(function(element){return cloneUnlessOtherwiseSpecified(element,options)})}
function mergeObject(target,source,options){var destination={};if(options.isMergeableObject(target)){Object.keys(target).forEach(function(key){destination[key]=cloneUnlessOtherwiseSpecified(target[key],options);});}
Object.keys(source).forEach(function(key){if(!options.isMergeableObject(source[key])||!target[key]){destination[key]=cloneUnlessOtherwiseSpecified(source[key],options);}else{destination[key]=deepmerge(target[key],source[key],options);}});return destination}
function deepmerge(target,source,options){options=options||{};options.arrayMerge=options.arrayMerge||defaultArrayMerge;options.isMergeableObject=options.isMergeableObject||isMergeableObject;var sourceIsArray=Array.isArray(source);var targetIsArray=Array.isArray(target);var sourceAndTargetTypesMatch=sourceIsArray===targetIsArray;if(!sourceAndTargetTypesMatch){return cloneUnlessOtherwiseSpecified(source,options)}else if(sourceIsArray){return options.arrayMerge(target,source,options)}else{return mergeObject(target,source,options)}}
deepmerge.all=function deepmergeAll(array,options){if(!Array.isArray(array)){throw new Error('first argument should be an array')}
return array.reduce(function(prev,next){return deepmerge(prev,next,options)},{})};var deepmerge_1=deepmerge;__webpack_exports__["default"]=(deepmerge_1);})});